From e4de6ef9867ec773f2741f42532c364063ce6c2a Mon Sep 17 00:00:00 2001
From: "hc7.choi" <hc7choi@hc7.choi>
Date: Mon, 17 Jun 2013 20:56:18 +0900
Subject: [PATCH] JQM cancle 0021,0045 patch

---
 .../jquery-mobile-1.2.0/js/widgets/forms/slider.js |   46 ++++----------------
 1 file changed, 9 insertions(+), 37 deletions(-)

diff --git a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
index a56ac51..7a519b9 100644
--- a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
+++ b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
@@ -81,10 +81,6 @@ $.widget( "mobile.slider", $.mobile.widget, {
 		domHandle.className = 'ui-slider-handle';
 		domSlider.appendChild( domHandle );
 
-		if ( $( control ).find( "option" ).length && $( control ).find( "option" ).text() === "" ) {
-			$( domSlider ).addClass( "ui-toggle-switch" );
-		}
-
 		handle.buttonMarkup({ corners: true, theme: theme, shadow: true })
 				.attr({
 					"role": "slider",
@@ -160,7 +156,7 @@ $.widget( "mobile.slider", $.mobile.widget, {
 		this._preventDocumentDrag = function( event ) {
 			// NOTE: we don't do this in refresh because we still want to
 			//       support programmatic alteration of disabled inputs
-                       if ( self.dragging && !self.options.disabled && (!$(self.element).siblings(".ui-slider").is(".ui-toggle-switch") || (( $(event.target).find(".ui-slider-switch") === $(self.element) ) && slider.is(".ui-toggle-switch") && $(self.element).siblings(".ui-slider").find(".ui-slider-handle").is(".ui-btn-hover-s"))) ) {
+                       if ( self.dragging && !self.options.disabled ) {
 
 				// divide jQM and Tizen slider on dragging outside of toggle area
 				// self.mouseMoved must be updated before refresh() because it will be used in the control "change" event
@@ -330,12 +326,6 @@ $.widget( "mobile.slider", $.mobile.widget, {
 	},
 
 	refresh: function( val, isfromControl, preventInputUpdate ) {
-		var imgToggle = false,
-			appHandle;
-
-		if ( $( this.handle ).parents().is( ".ui-toggle-switch" ) ) {
-			imgToggle = true;
-		}
 		// NOTE: we don't return here because we want to support programmatic
 		//       alteration of the input value, which should still update the slider
 		if ( this.options.disabled || this.element.attr('disabled')) {
@@ -408,33 +398,15 @@ $.widget( "mobile.slider", $.mobile.widget, {
 				title: cType === "input" ? newval : control.find( "option" ).eq( newval ).getEncodedText()
 			});
 
-		if ( !imgToggle ) {
-			if ( this.valuebg ) {
-				this.valuebg.css( "width", percent + "%" );
-			}
-		}
+		if ( this._labels ) {
+			var handlePercent = this.handle.width() / this.slider.width() * 100,
+				aPercent = percent && handlePercent + ( 100 - handlePercent ) * percent / 100,
+				bPercent = percent === 100 ? 0 : Math.min( handlePercent + 100 - aPercent, 100 );
 
-		// drag the label widths
-		if ( imgToggle ) {
-			appHandle = $( this.handle ).parents( ".ui-slider" );
-			if ( $( this.handle ).attr("aria-valuenow") === "on" || $( this.handle ).attr("aria-valuenow") === $( this.element ).children( "option:last" ).attr( "value" ) ) {
-				appHandle.children( "span.ui-slider-label-a" ).show();
-				appHandle.children( "span.ui-slider-label-b" ).hide();
-			} else {
-				appHandle.children( "span.ui-slider-label-b" ).show();
-				appHandle.children( "span.ui-slider-label-a" ).hide();
-			}
-		} else {
-			if ( this._labels ) {
-				var handlePercent = this.handle.width() / this.slider.width() * 100,
-					aPercent = percent && handlePercent + ( 100 - handlePercent ) * percent / 100,
-					bPercent = percent === 100 ? 0 : Math.min( handlePercent + 100 - aPercent, 100 );
-
-				this._labels.each(function() {
-					var ab = $( this ).is( ".ui-slider-label-a" );
-					$( this ).width( ( ab ? aPercent : bPercent  ) + "%" );
-				});
-			}
+			this._labels.each(function() {
+				var ab = $( this ).is( ".ui-slider-label-a" );
+				$( this ).width( ( ab ? aPercent : bPercent  ) + "%" );
+			});
 		}
 
 		if ( !preventInputUpdate ) {
-- 
1.7.9.5


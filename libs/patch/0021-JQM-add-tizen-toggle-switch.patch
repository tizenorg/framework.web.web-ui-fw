From d91978cf6366c05780ed223264f65869387bc4a4 Mon Sep 17 00:00:00 2001
From: Jun Jinhyuk <jinhyuk.jun@samsung.com>
Date: Fri, 7 Dec 2012 10:33:32 +0900
Subject: [PATCH] JQM add tizen toggle switch

Change-Id: Iebd5611d298e67295edfe5ded449e11637be5425
---
 .../jquery-mobile-1.2.0/js/widgets/forms/slider.js |   44 +++++++++++++++-----
 1 files changed, 33 insertions(+), 11 deletions(-)

diff --git a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
index e7f5df0..2e682db 100644
--- a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
+++ b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
@@ -81,6 +81,10 @@ $.widget( "mobile.slider", $.mobile.widget, {
 		domHandle.className = 'ui-slider-handle';
 		domSlider.appendChild( domHandle );
 
+		if ( $( control ).find( "option" ).length && $( control ).find( "option" ).text() === "" ) {
+			$( domSlider ).addClass( "ui-toggle-switch" );
+		}
+
 		handle.buttonMarkup({ corners: true, theme: theme, shadow: true })
 				.attr({
 					"role": "slider",
@@ -324,7 +328,12 @@ $.widget( "mobile.slider", $.mobile.widget, {
 	},
 
 	refresh: function( val, isfromControl, preventInputUpdate ) {
+		var imgToggle = false,
+			appHandle;
 
+		if ( $( this.handle ).parents().is( ".ui-toggle-switch" ) ) {
+			imgToggle = true;
+		}
 		// NOTE: we don't return here because we want to support programmatic
 		//       alteration of the input value, which should still update the slider
 		if ( this.options.disabled || this.element.attr('disabled')) {
@@ -397,20 +406,33 @@ $.widget( "mobile.slider", $.mobile.widget, {
 				title: cType === "input" ? newval : control.find( "option" ).eq( newval ).getEncodedText()
 			});
 
-		if ( this.valuebg ) {
-			this.valuebg.css( "width", percent + "%" );
+		if ( !imgToggle ) {
+			if ( this.valuebg ) {
+				this.valuebg.css( "width", percent + "%" );
+			}
 		}
 
 		// drag the label widths
-		if ( this._labels ) {
-			var handlePercent = this.handle.width() / this.slider.width() * 100,
-				aPercent = percent && handlePercent + ( 100 - handlePercent ) * percent / 100,
-				bPercent = percent === 100 ? 0 : Math.min( handlePercent + 100 - aPercent, 100 );
-
-			this._labels.each(function() {
-				var ab = $( this ).is( ".ui-slider-label-a" );
-				$( this ).width( ( ab ? aPercent : bPercent  ) + "%" );
-			});
+		if ( imgToggle ) {
+			appHandle = $( this.handle ).parents( ".ui-slider" );
+			if ( $( this.handle ).attr("aria-valuenow") === "on" ) {
+				appHandle.children( "span.ui-slider-label-a" ).show();
+				appHandle.children( "span.ui-slider-label-b" ).hide();
+			} else {
+				appHandle.children( "span.ui-slider-label-b" ).show();
+				appHandle.children( "span.ui-slider-label-a" ).hide();
+			}
+		} else {
+			if ( this._labels ) {
+				var handlePercent = this.handle.width() / this.slider.width() * 100,
+					aPercent = percent && handlePercent + ( 100 - handlePercent ) * percent / 100,
+					bPercent = percent === 100 ? 0 : Math.min( handlePercent + 100 - aPercent, 100 );
+
+				this._labels.each(function() {
+					var ab = $( this ).is( ".ui-slider-label-a" );
+					$( this ).width( ( ab ? aPercent : bPercent  ) + "%" );
+				});
+			}
 		}
 
 		if ( !preventInputUpdate ) {
-- 
1.7.4.1


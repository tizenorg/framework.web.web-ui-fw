From 15c488ed418fa5c8b5ae562427682f3a4e3bed8c Mon Sep 17 00:00:00 2001
From: "sang-hee.lee" <sang-hee.lee@samsung.com>
Date: Tue, 19 Mar 2013 20:05:24 +0900
Subject: [PATCH] JQM Support accessibility for checkboxradio

---
 .../js/widgets/forms/checkboxradio.js              |   12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/checkboxradio.js b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/checkboxradio.js
index a9f8f31..aa6f8a2 100644
--- a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/checkboxradio.js
+++ b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/checkboxradio.js
@@ -38,12 +38,15 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 			checkedClass = "ui-" + checkedState + activeBtn,
 			uncheckedClass = "ui-" + uncheckedState,
 			checkedicon = "ui-icon-" + checkedState,
-			uncheckedicon = "ui-icon-" + uncheckedState;
+			uncheckedicon = "ui-icon-" + uncheckedState,
+			ariaCheckedAttr = "";
 
 		if ( inputtype !== "checkbox" && inputtype !== "radio" ) {
 			return;
 		}
 
+		ariaCheckedAttr = ( inputtype === "checkbox" ) ? "aria-checked" : "aria-selected";
+
 		// Support fake label
 		if ( label.length == 0 ) {
 			label = $( "<label for='" + input[ 0 ].id  +
@@ -57,7 +60,8 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 			checkedClass: checkedClass,
 			uncheckedClass: uncheckedClass,
 			checkedicon: checkedicon,
-			uncheckedicon: uncheckedicon
+			uncheckedicon: uncheckedicon,
+			ariaCheckedAttr : ariaCheckedAttr
 		});
 
 		// If there's no selected theme check the data attr
@@ -76,6 +80,7 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 		// Wrap the input + label in a div
 		var wrapper = document.createElement('div');
 		wrapper.className = 'ui-' + inputtype;
+		wrapper.setAttribute( "role", inputtype );
 
 		if ( input.hasClass( "favorite" ) ) {
 			wrapper.className += ' favorite';
@@ -184,14 +189,17 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 	refresh: function() {
 		var input = this.element[0],
 			label = this.label,
+			wrapper = input.parentNode,
 			icon = label.find( ".ui-icon" );
 
 		if ( input.checked ) {
 			label.addClass( this.checkedClass ).removeClass( this.uncheckedClass );
 			icon.addClass( this.checkedicon ).removeClass( this.uncheckedicon );
+			wrapper.setAttribute( this.ariaCheckedAttr, true );
 		} else {
 			label.removeClass( this.checkedClass ).addClass( this.uncheckedClass );
 			icon.removeClass( this.checkedicon ).addClass( this.uncheckedicon );
+			wrapper.setAttribute( this.ariaCheckedAttr, false );
 		}
 
 		if ( input.disabled ) {
-- 
1.7.9.5


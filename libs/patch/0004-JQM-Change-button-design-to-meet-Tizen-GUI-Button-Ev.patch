From 51799bf3c58cd972217fed6fb5453b7ca85cfb65 Mon Sep 17 00:00:00 2001
From: Koeun Choi <koeun.choi@samsung.com>
Date: Thu, 16 Feb 2012 16:37:08 +0900
Subject: [PATCH] JQM : Change button design to meet Tizen GUI, Button Event bug fixed

---
 .../js/jquery.mobile.buttonMarkup.js               |  164 +++++++++++++++-----
 1 files changed, 123 insertions(+), 41 deletions(-)

diff --git a/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.buttonMarkup.js b/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.buttonMarkup.js
index a08e611..d676ad8 100644
--- a/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.buttonMarkup.js
+++ b/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.buttonMarkup.js
@@ -2,6 +2,22 @@
 * "buttons" plugin - for making button-like links
 */
 
+/**
+ * Button Markup modified for TIZEN style.
+ *
+ * HTML Attributes:
+ *
+ *		data-role:	button
+ *		data-style : circle, nobg, edit
+ *
+ *
+ * Examples:
+ *
+ *  	<div  data-role="button" data-inline="true" data-icon="send" data-style="circle"></div>
+ *  	<div  data-role="button" data-inline="true" data-icon="favorite" data-style="nobg">
+ *  	<div  data-role="button" data-inline="true" data-icon="editminus" data-style="edit"></div>
+ */
+
 ( function( $, undefined ) {
 
 $.fn.buttonMarkup = function( options ) {
@@ -13,6 +29,7 @@ $.fn.buttonMarkup = function( options ) {
 			o = $.extend( {}, $.fn.buttonMarkup.defaults, {
 				icon:       options.icon       !== undefined ? options.icon       : el.jqmData( "icon" ),
 				iconpos:    options.iconpos    !== undefined ? options.iconpos    : el.jqmData( "iconpos" ),
+				style: 		el.jqmData( "style"),	/* style : default : block. Added "circle", "edit" and "nobg" */
 				theme:      options.theme      !== undefined ? options.theme      : el.jqmData( "theme" ),
 				inline:     options.inline     !== undefined ? options.inline     : el.jqmData( "inline" ),
 				shadow:     options.shadow     !== undefined ? options.shadow     : el.jqmData( "shadow" ),
@@ -30,8 +47,9 @@ $.fn.buttonMarkup = function( options ) {
 			buttonText = document.createElement( o.wrapperEls ),
 			buttonIcon = o.icon ? document.createElement( "span" ) : null;
 
-		if ( attachEvents ) {
-			attachEvents();
+		// Bug fix for jQM : When moving finger out of button after touching down button, button color MUST be returned.
+		if ( attachTIZENEvents ) {
+			attachTIZENEvents();
 		}
 
 		// if not, try to find closest theme container
@@ -54,6 +72,10 @@ $.fn.buttonMarkup = function( options ) {
 			if ( o.iconshadow ) {
 				iconClass += " ui-icon-shadow";
 			}
+
+			if ( $(el).text().length == 0 ) { /* No text */
+				buttonClass += " ui-btn-icon_only";
+			}
 		}
 
 		if ( o.iconpos ) {
@@ -73,8 +95,51 @@ $.fn.buttonMarkup = function( options ) {
 			buttonClass += " ui-shadow";
 		}
 
-		e.setAttribute( "data-" + $.mobile.ns + "theme", o.theme );
-		el.addClass( buttonClass );
+		/* Set Button class for Icon BG */
+		if ( o.style == "circle" ) {	/* Circle BG Button. */
+			/* style : no text, Icon only */
+			buttonClass += " ui-btn-corner-circle";
+			buttonClass += " ui-btn-icon_only";
+		}
+		else if ( o.style == "nobg" ){
+			/* style : no text, Icon only, no bg */
+			buttonClass += " ui-btn-icon-nobg";
+			buttonClass += " ui-btn-icon_only";
+		}
+		else if ( o.style == "edit" ){ /* Contact Edit style */
+			buttonClass += " ui-btn-edit";
+		}
+
+		el.attr( "data-" + $.mobile.ns + "theme", o.theme )
+			.addClass( buttonClass );
+
+		/* Text Class for text positioning with icon. */
+		textClass = "ui-btn-text";
+
+		if ( o.icon ) {
+			if ( $(el).text().length > 0 ) {
+				( o.iconpos == "right" ? textClass += " ui-btn-text-padding-right" : textClass += " ui-btn-text-padding-left" );
+				innerClass += " ui-btn-hastxt";
+			}
+			else {
+				if ( o.style == "circle" ) { /* Circle BG Button. */
+					/* style : no text, Icon only */
+					innerClass += " ui-btn-corner-circle";
+				}
+				else if ( o.style == "nobg" ) {
+					/* style : no text, Icon only, no bg */
+					innerClass += " ui-btn-icon-nobg";
+				}
+
+				/* Icon Only : No padding on button-inner. */
+				innerClass += " ui-btn-icon-only";
+			}
+		}
+		else {	/* Text Only */
+			if ( $(el).text().length > 0 ) {
+				innerClass += " ui-btn-hastxt";
+			}
+		}
 
 		buttonInner.className = innerClass;
 		buttonInner.setAttribute("aria-hidden", "true");
@@ -96,7 +161,7 @@ $.fn.buttonMarkup = function( options ) {
 		// TODO obviously it would be nice to pull this element out instead of
 		// retrieving it from the DOM again, but this change is much less obtrusive
 		// and 1.0 draws nigh
-		$.data( e, 'textWrapper', $( buttonText ) );
+		el.data( 'textWrapper', $( buttonText ) );
 	}
 
 	return this;
@@ -114,13 +179,7 @@ function closestEnabledButton( element ) {
     var cname;
 
     while ( element ) {
-		// Note that we check for typeof className below because the element we
-		// handed could be in an SVG DOM where className on SVG elements is defined to
-		// be of a different type (SVGAnimatedString). We only operate on HTML DOM
-		// elements, so we look for plain "string".
-
-        cname = ( typeof element.className === 'string' ) && element.className.split(' ');
-
+        cname = element.className && element.className.split(' ');
         if ( cname && $.inArray( "ui-btn", cname ) > -1 && $.inArray( "ui-disabled", cname ) < 0 ) {
             break;
         }
@@ -130,51 +189,74 @@ function closestEnabledButton( element ) {
     return element;
 }
 
-var attachEvents = function() {
+// Attach tizen events...
+var selectedButton = null;
+var useScrollview = false;
+var attachTIZENEvents = function() {
 	$( document ).bind( {
-		"vmousedown": function( event ) {
-			var btn = closestEnabledButton( event.target ),
-				$btn, theme;
-
-			if ( btn ) {
-				$btn = $( btn );
+		// button click event comes this order : vmouseover -> vmousedown -> vmouseup -> vmouseout
+		"vmouseover focus": function( event ) {
+			// console.log( event.type );
+			var $btn, theme;
+			// check if there is selected button... if so, make it to "btn-up" state. 
+			if ( selectedButton ) {
+				$btn = $( selectedButton );
 				theme = $btn.attr( "data-" + $.mobile.ns + "theme" );
-				$btn.removeClass( "ui-btn-up-" + theme ).addClass( "ui-btn-down-" + theme );
+				$btn.removeClass( "ui-btn-down-" + theme ).removeClass( "ui-btn-hover-" + theme )
+					.addClass( "ui-btn-up-" + theme );
 			}
-		},
-		"vmousecancel vmouseup": function( event ) {
-			var btn = closestEnabledButton( event.target ),
-				$btn, theme;
 
-			if ( btn ) {
-				$btn = $( btn );
+			// new button
+			selectedButton = closestEnabledButton( event.target );
+			if ( selectedButton ) {
+				$btn = $( selectedButton );
 				theme = $btn.attr( "data-" + $.mobile.ns + "theme" );
-				$btn.removeClass( "ui-btn-down-" + theme ).addClass( "ui-btn-up-" + theme );
+				$btn.removeClass( "ui-btn-up-" + theme ).addClass( "ui-btn-hover-" + theme );
 			}
 		},
-		"vmouseover focus": function( event ) {
-			var btn = closestEnabledButton( event.target ),
-				$btn, theme;
-
-			if ( btn ) {
-				$btn = $( btn );
+		"vmouseout blur": function( event ) {
+			// console.log( event.type );
+			var $btn, theme;
+			if ( selectedButton ) {
+				$btn = $( selectedButton );
 				theme = $btn.attr( "data-" + $.mobile.ns + "theme" );
-				$btn.removeClass( "ui-btn-up-" + theme ).addClass( "ui-btn-hover-" + theme );
+				$btn.removeClass( "ui-btn-hover-" + theme ).removeClass( "ui-btn-down-" + theme ).addClass( "ui-btn-up-" + theme );
 			}
 		},
-		"vmouseout blur": function( event ) {
-			var btn = closestEnabledButton( event.target ),
-				$btn, theme;
+		"vmousedown": function( event ) {
+			var $btn, theme;
 
-			if ( btn ) {
-				$btn = $( btn );
+			if ( !selectedButton ) {
+				selectedButton = closestEnabledButton( event.target );
+			}
+
+			$btn = $( selectedButton );
+			theme = $btn.attr( "data-" + $.mobile.ns + "theme" );
+			$btn.removeClass( "ui-btn-up-" + theme ).addClass( "ui-btn-down-" + theme );
+		},
+		"vmousecancel vmouseup": function( event ) {
+			// console.log( event.type );
+			var $btn, theme;
+			if ( selectedButton ) {
+				$btn = $( selectedButton );
 				theme = $btn.attr( "data-" + $.mobile.ns + "theme" );
-				$btn.removeClass( "ui-btn-hover-" + theme  + " ui-btn-down-" + theme ).addClass( "ui-btn-up-" + theme );
+				$btn.removeClass( "ui-btn-down-" + theme ).addClass( "ui-btn-up-" + theme );
+
+				if ( event.type === "vmousecancel" && useScrollview ) {
+					event.preventDefault();
+				}
+				selectedButton = null;
 			}
+		},
+		"scrollstart scrollview_scroll": function( event ) {
+			// console.log( event.type );
+			if ( event.type === "scrollview_scroll" )
+				useScrollview = true;
+			$(this).trigger("vmousecancel");
 		}
 	});
 
-	attachEvents = null;
+	attachTIZENEvents = null;
 };
 
 //links in bars, or those with  data-role become buttons
-- 
1.7.0.4


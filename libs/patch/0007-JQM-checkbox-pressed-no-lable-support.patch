From e424c135d1a438cc234107bb45608baa26139ebc Mon Sep 17 00:00:00 2001
From: Koeun Choi <koeun.choi@samsung.com>
Date: Wed, 15 Feb 2012 19:34:44 +0900
Subject: [PATCH] JQM:checkbox pressed, no-lable support

---
 .../js/jquery.mobile.forms.checkboxradio.js        |   60 ++++++++++++++++++--
 1 files changed, 55 insertions(+), 5 deletions(-)

diff --git a/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.forms.checkboxradio.js b/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.forms.checkboxradio.js
index d09a422..6b2268f 100644
--- a/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.forms.checkboxradio.js
+++ b/libs/js/jquery-mobile-1.0.1pre/js/jquery.mobile.forms.checkboxradio.js
@@ -23,11 +23,22 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 			checkedClass = "ui-" + checkedState + activeBtn,
 			uncheckedClass = "ui-" + uncheckedState,
 			checkedicon = "ui-icon-" + checkedState,
-			uncheckedicon = "ui-icon-" + uncheckedState;
+			uncheckedicon = "ui-icon-" + uncheckedState,
+			checkedpressedicon = checkedicon + "-press",
+			uncheckedpressedicon = uncheckedicon + "-press";
 
 		if ( inputtype !== "checkbox" && inputtype !== "radio" ) {
 			return;
 		}
+		// Support fake label
+		if ( label.length == 0 ) {
+			//fake label
+			label = $( "<label for='" + input[ 0 ].id  + "' style='display:block;width:1px;height:1px;'></label>" );
+		}
+
+		// Wrap the input + label in a div
+		input.add( label )
+			.wrapAll( "<div class='ui-" + inputtype + "'></div>" );
 
 		// Expose for other methods
 		$.extend( this, {
@@ -36,7 +47,9 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 			checkedClass: checkedClass,
 			uncheckedClass: uncheckedClass,
 			checkedicon: checkedicon,
-			uncheckedicon: uncheckedicon
+			uncheckedicon: uncheckedicon,
+			checkedpressedicon: checkedpressedicon,
+			uncheckedpressedicon: uncheckedpressedicon
 		});
 
 		// If there's no selected theme...
@@ -50,11 +63,20 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 			shadow: false
 		});
 
-		// Wrap the input + label in a div
-		input.add( label )
-			.wrapAll( "<div class='ui-" + inputtype + "'></div>" );
+		// TODO : support either data-style or class...
+		if ( input.hasClass( "favorite" ) ) {
+			input.parent().addClass( "favorite" ).end();
+		}
 
 		label.bind({
+			vmousedown: function() {
+				self.press();
+			},
+			vmouseup: function() {
+				self.unpress();
+			},
+
+
 			vmouseover: function( event ) {
 				if ( $( this ).parent().is( ".ui-disabled" ) ) {
 					event.stopPropagation();
@@ -154,6 +176,34 @@ $.widget( "mobile.checkboxradio", $.mobile.widget, {
 		.checkboxradio( "refresh" );
 	},
 
+	press: function() {
+		var input = this.element,
+			label = this.label,
+			icon = label.find( ".ui-icon" );
+
+		if ( !$( input[ 0 ] ).is( ":disabled" ) ) {
+			if ( $( input[ 0 ] ).prop( "checked" ) ) {
+				icon.addClass( this.uncheckedpressedicon ).removeClass( this.checkedicon );
+			} else {
+				icon.removeClass( this.uncheckedicon ).addClass( this.checkedpressedicon );
+			}
+		}
+	},
+
+	unpress: function() {
+		var input = this.element,
+			label = this.label,
+			icon = label.find( ".ui-icon" );
+
+		if ( !$( input[ 0 ] ).is( ":disabled" ) ) {
+			if ( $( input[ 0 ] ).prop( "checked" ) ) {
+				icon.removeClass( this.uncheckedpressedicon ).addClass( this.uncheckedicon );
+			} else {
+				icon.addClass( this.checkedicon ).removeClass( this.checkedpressedicon );
+			}
+		}
+	},
+
 	refresh: function() {
 		var input = this.element,
 			label = this.label,
-- 
1.7.0.4


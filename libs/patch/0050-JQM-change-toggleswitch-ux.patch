From 011bc8a62357881585373870e5d9ab5441bfeb46 Mon Sep 17 00:00:00 2001
From: "hc7.choi" <hc7choi@hc7.choi>
Date: Tue, 18 Jun 2013 11:16:33 +0900
Subject: [PATCH] JQM change toggleswitch ux

---
 .../jquery-mobile-1.2.0/js/widgets/forms/slider.js |   14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
index 7a519b9..313f3a7 100644
--- a/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
+++ b/libs/js/jquery-mobile-1.2.0/js/widgets/forms/slider.js
@@ -80,7 +80,9 @@ $.widget( "mobile.slider", $.mobile.widget, {
 		domSlider.className = ['ui-slider ',selectClass," ui-btn-down-",trackTheme,' ui-btn-corner-all', inlineClass, miniClass].join( "" );
 		domHandle.className = 'ui-slider-handle';
 		domSlider.appendChild( domHandle );
-
+		if ( $( control ).find( "option" ).length && $( control ).find( "option" ).text() === "" ) {
+			$( domSlider ).addClass( "ui-toggle-switch" );
+		}
 		handle.buttonMarkup({ corners: true, theme: theme, shadow: true })
 				.attr({
 					"role": "slider",
@@ -156,9 +158,9 @@ $.widget( "mobile.slider", $.mobile.widget, {
 		this._preventDocumentDrag = function( event ) {
 			// NOTE: we don't do this in refresh because we still want to
 			//       support programmatic alteration of disabled inputs
-                       if ( self.dragging && !self.options.disabled ) {
+			var et = $(event.target);
+			if ( self.dragging && !self.options.disabled && ( ( et.parents( ".ui-slider" ).is( ".ui-toggle-switch" ) && et.parents( ".ui-slider-handle" ).is( ".ui-btn-hover-s" ) ) || ( !$( self.element ).siblings( ".ui-slider" ).is( ".ui-toggle-switch"))) ) {
 
-				// divide jQM and Tizen slider on dragging outside of toggle area
 				// self.mouseMoved must be updated before refresh() because it will be used in the control "change" event
 				self.mouseMoved = true;
 
@@ -326,6 +328,7 @@ $.widget( "mobile.slider", $.mobile.widget, {
 	},
 
 	refresh: function( val, isfromControl, preventInputUpdate ) {
+
 		// NOTE: we don't return here because we want to support programmatic
 		//       alteration of the input value, which should still update the slider
 		if ( this.options.disabled || this.element.attr('disabled')) {
@@ -398,6 +401,11 @@ $.widget( "mobile.slider", $.mobile.widget, {
 				title: cType === "input" ? newval : control.find( "option" ).eq( newval ).getEncodedText()
 			});
 
+		if ( this.valuebg ) {
+			this.valuebg.css( "width", percent + "%" );
+		}
+
+		// drag the label widths
 		if ( this._labels ) {
 			var handlePercent = this.handle.width() / this.slider.width() * 100,
 				aPercent = percent && handlePercent + ( 100 - handlePercent ) * percent / 100,
-- 
1.7.9.5


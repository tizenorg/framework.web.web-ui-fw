<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <script type="text/javascript" src="snippet.js"></script>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <link href="styles.css" rel="StyleSheet" type="text/css">
    <link href="snippet.css" rel="StyleSheet" type="text/css">
    <title>Button Widget</title>
</head>
<body onload="prettyPrint()" id="content">
<div><a href="/dev-guide/2.2.1/org.tizen.web.appprogramming/html/cover_page.htm">Tizen Web App Programming</a> &gt; <a
        href="/dev-guide/2.2.1/org.tizen.web.appprogramming/html/api_reference/api_reference.htm">API References</a>
    &gt;
    <a href="web_ui_framework.htm">UI
        Framework Reference</a>
    &gt;
    <a href="widget_reference.htm">Widget Reference</a>

</div>

<h1>Button Widget</h1>

Button widget changes default browser buttons to special buttons with additional opportunities like icon, corners, shadow.

<h2>Table of Contents</h2>
<ol class="toc">
    
    <li><a href="#default-selectors0.15093073272146285">Default selectors</a>
        
        <ol class="toc">
        
            <li><a href="#html-examples0.9962207032367587">HTML Examples</a>
            </li>
        
        </ol>
        
    </li>
    
    <li><a href="#manual-constructor0.005641590338200331">Manual constructor</a>
        
    </li>
    
    <li><a href="#options-for button widget0.0717678836081177">Options for Button Widget</a>
        
        <ol class="toc">
        
            <li><a href="#mini-version0.7525081613566726">Mini version</a>
            </li>
        
            <li><a href="#inline-buttons0.46832675859332085">Inline buttons</a>
            </li>
        
            <li><a href="#icon-positioning0.7850344670005143">Icon positioning</a>
            </li>
        
        </ol>
        
    </li>
    
    <li><a href="#methods0.9616110406350344">Methods</a>
        
    </li>
    
    <li><a href="#options-list">Options list</a>
        
    </li>
    
    <li><a href="#methods-list">Methods list</a>
        
        <ol class="toc">
        
            <li><a href="#method-destroy">destroy</a>
            </li>
        
            <li><a href="#method-disable">disable</a>
            </li>
        
            <li><a href="#method-enable">enable</a>
            </li>
        
            <li><a href="#method-off">off</a>
            </li>
        
            <li><a href="#method-on">on</a>
            </li>
        
            <li><a href="#method-option">option</a>
            </li>
        
            <li><a href="#method-refresh">refresh</a>
            </li>
        
            <li><a href="#method-trigger">trigger</a>
            </li>
        
            <li><a href="#method-value">value</a>
            </li>
        
        </ol>
        
    </li>
    
</ol>

<h2><a id='default-selectors0.15093073272146285'></a>Default selectors</h2>

<p>In default all <strong>BUTTON</strong> tags and all <strong>INPUT</strong> tags with type equals <em>button</em>, <em>submit</em> or <em>reset</em> are change to Tizen WebUI buttons.<br />In addition all elements with <em>data-role=button</em> and class <em>ui-btn</em> are changed to Tizen Web UI buttons.<br />To prevent auto enhance element to Tizen Web UI buttons you can use <em>data-role=none</em> attribute on <strong>BUTTON</strong> or <strong>INPUT</strong> element.</p>

<h3><a id='html-examples0.9962207032367587'></a>HTML Examples</h3>

<h4><a id='create-simple button from link using data-role0.07405800558626652'></a>Create simple button from link using data-role</h4>

<pre class="prettyprint">    &lt;a href="#page2" data-role="button"&gt;Link button&lt;/a&gt;
</pre>

<h4><a id='create-simple button from link using class selector0.061396701261401176'></a>Create simple button from link using class selector</h4>

<pre class="prettyprint">    &lt;a href="#page2" class="ui-btn"&gt;Link button&lt;/a&gt;
</pre>

<h4><a id='create-simple button using button's tag0.8684225017204881'></a>Create simple button using button's tag</h4>

<pre class="prettyprint">    &lt;button&gt;Button element&lt;/button&gt;
</pre>

<h4><a id='create-simple button from input using type0.8296585418283939'></a>Create simple button from input using type</h4>

<pre class="prettyprint">    &lt;input type="button" value="Button" /&gt;
    &lt;input type="submit" value="Submit Button" /&gt;
    &lt;input type="reset" value="Reset Button" /&gt;
</pre>

<h2><a id='manual-constructor0.005641590338200331'></a>Manual constructor</h2>

<p>For manual creation of button widget you can use constructor of widget from <strong>tau</strong> namespace:</p>

<pre class="prettyprint">    var buttonElement = document.getElementById('button'),
        button = tau.widget.button(buttonElement, {mini: true});
</pre>

<p>Constructor has one require parameter <strong>element</strong> which are base <strong>HTMLElement</strong> to create widget. We recommend get this element by method <em>document.getElementById</em>. Second parameter is <strong>options</strong> and it is a object with options for widget.</p>

<p>If jQuery library is loaded, its method can be used:</p>

<pre class="prettyprint">    var button = $('#button').button({mini: true});
</pre>

<p>jQuery Mobile constructor has one optional parameter is <strong>options</strong> and it is a object with options for widget.</p>

<h2><a id='options-for button widget0.0717678836081177'></a>Options for Button Widget</h2>

<p>Options for widget can be defined as <em>data-...</em> attributes or give as parameter in constructor.</p>

<p>You can change option for widget using method <strong>option</strong>.</p>

<h3><a id='mini-version0.7525081613566726'></a>Mini version</h3>

<p>For a more compact version that is useful in toolbars and tight spaces, add the data-mini="true" attribute to the button to create a mini version. This will produce a button that is not as tall as the standard version and has a smaller text size.</p>

<pre class="prettyprint">    &lt;a href="index.html" data-role="button" data-mini="true"&gt;Link button&lt;/a&gt;
</pre>

<h3><a id='inline-buttons0.46832675859332085'></a>Inline buttons</h3>

<p>By default, all buttons in the body content are styled as block-level elements so they fill the width of the screen. However, if you want a more compact button that is only as wide as the text and icons inside, add the data-inline="true" attribute to the button.</p>

<pre class="prettyprint">    &lt;a href="index.html" data-role="button" data-inline="true"&gt;Cancel&lt;/a&gt;
</pre>

<p>If you have multiple buttons that should sit side-by-side on the same line, add the data-inline="true" attribute to each button. This will style the buttons to be the width of their content and float the buttons so they sit on the same line.</p>

<pre class="prettyprint">    &lt;a href="index.html" data-role="button" data-inline="true"&gt;Cancel&lt;/a&gt;
    &lt;a href="index.html" data-role="button" data-inline="true" data-theme="b"&gt;Save&lt;/a&gt;
</pre>

<h3><a id='icon-positioning0.7850344670005143'></a>Icon positioning</h3>

<p>By default, all icons in buttons are placed to the left of the button text. This default may be overridden using the data-iconpos attribute.</p>

<pre class="prettyprint">    &lt;a href="index.html" data-role="button" data-icon="delete" data-iconpos="right"&gt;Delete&lt;/a&gt;
</pre>

<p>Possible values of data-iconpos:<br></p>

<ul>
<li>"left"  - creates the button with left-aligned icon<br></li>
<li>"right"  - creates the button with right-aligned icon<br></li>
<li>"top"  - creates the button with icon positioned above the text<br></li>
<li>"bottom"  - creates the button with icon positioned below the text</li>
</ul>

<p>You can also create an icon-only button, by setting the data-iconpos attribute to notext. The button plugin will hide the text on-screen, but add it as a title attribute on the link to provide context for screen readers and devices that support tooltips.</p>

<pre class="prettyprint">    &lt;a href="index.html" data-role="button" data-icon="delete" data-iconpos="notext"&gt;Delete&lt;/a&gt;
</pre>

<h2><a id='methods0.9616110406350344'></a>Methods</h2>

<p>To call method ion widget you can use one of existing API:</p>

<p>First API is from tau namespace:</p>

<pre class="prettyprint">    var buttonElement = document.getElementById('button'),
        button = tau.widget.button(buttonElement, 'Button');

    button.methodName(methodArgument1, methodArgument2, ...);
</pre>

<p>Second API is jQuery Mobile API and for call <em>methodName</em> you can use:</p>

<pre class="prettyprint">    $(".selector").button('methodName', methodArgument1, methodArgument2, ...);
</pre>


<h2><a id="options-list"></a>Options list</h2>

<table><tbody>
<tr>
    <th>Option</th>
    <th>Input type</th>
    <th>Default value</th>
    <th>Description</th>
</tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-bar</span></td>
            <td>boolean</td>
            <td>false</td>
            <td>if button is part of bar then you should set true</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-corners</span></td>
            <td>boolean</td>
            <td>false</td>
            <td>corners of button</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-icon</span></td>
            <td>string | null</td>
            <td>null</td>
            <td>icon type</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-iconpos</span></td>
            <td>&quot;left&quot; | &quot;right&quot; | &quot;top&quot; | &quot;bottom&quot; | null</td>
            <td>null</td>
            <td>position of icon</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-iconshadow</span></td>
            <td>boolean</td>
            <td>true</td>
            <td>shadow of button's icon</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-inline</span></td>
            <td>string | null</td>
            <td>null</td>
            <td>if value is "true" then button has css property display = "inline"</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-mini</span></td>
            <td>boolean | null</td>
            <td>null</td>
            <td>size of button</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-shadow</span></td>
            <td>boolean</td>
            <td>true</td>
            <td>shadow of button</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-style</span></td>
            <td>&quot;circle&quot; | &quot;nobg&quot; | null</td>
            <td>null</td>
            <td>style of button</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-theme</span></td>
            <td>string | null</td>
            <td>null</td>
            <td>theme of widget</td>
        </tr>
    
        <tr>
            <td><span style="font-family: Courier New,Courier,monospace">data-wrapper-els</span></td>
            <td>&quot;span&quot; | &quot;div&quot;</td>
            <td>&quot;span&quot;</td>
            <td>wrapper tag name of button</td>
        </tr>
    
    </tbody>
</table>

<h2><a id="methods-list"></a>Methods list</h2>
<h3>Summary</h3>
<table class="informaltable">
    <thead><tr>
        <th>Method</th>
        <th>Description</th>
    </tr></thead>
    <tbody>

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
    <tr>
        <td><pre class="intable prettyprint"><a href="#method-destroy">destroy</a> (  ) </pre></td>
        <td><p>Removes the button functionality completely.</p></td>
    </tr>
    

    
    <tr>
        <td><pre class="intable prettyprint">Button <a href="#method-disable">disable</a> (  ) </pre></td>
        <td><p>Disable the button</p></td>
    </tr>
    

    
    <tr>
        <td><pre class="intable prettyprint">Button <a href="#method-enable">enable</a> (  ) </pre></td>
        <td><p>Enable the button</p></td>
    </tr>
    

    

    

    

    
    <tr>
        <td><pre class="intable prettyprint"><a href="#method-off">off</a> ( string eventName, Function listener, boolean? useCapture = false ) </pre></td>
        <td><p>Remove event listener to this.element.</p></td>
    </tr>
    

    
    <tr>
        <td><pre class="intable prettyprint"><a href="#method-on">on</a> ( string eventName, Function listener, boolean? useCapture = false ) </pre></td>
        <td><p>Add event listener to this.element.</p></td>
    </tr>
    

    
    <tr>
        <td><pre class="intable prettyprint">* <a href="#method-option">option</a> ( string | Object? name, * value ) </pre></td>
        <td><p>Get/Set options of the widget.</p></td>
    </tr>
    

    
    <tr>
        <td><pre class="intable prettyprint">Button <a href="#method-refresh">refresh</a> (  ) </pre></td>
        <td><p>Refresh a button markup.</p></td>
    </tr>
    

    

    
    <tr>
        <td><pre class="intable prettyprint">boolean <a href="#method-trigger">trigger</a> ( string eventName, *? data, boolean? bubbles = true, boolean? cancelable = true ) </pre></td>
        <td><p>Trigger an event on widget's element.</p></td>
    </tr>
    

    
    <tr>
        <td><pre class="intable prettyprint">string <a href="#method-value">value</a> ( string? value ) </pre></td>
        <td><p>Get or set value</p></td>
    </tr>
    

    </tbody>
</table>
<dl>

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-destroy">destroy</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Removes the button functionality completely.</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">destroy ( ) </pre></div>
            
            <div class="description">
                <p>
                    <p>This will return the element back to its pre-init state.</p>


                </p>
            </div>
                
                
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
        
            No Return Value
        
            </div>
            
            <div class="example">
                <span class="example"><p>Code example:</p></span>
                <pre name="code" class="examplecode prettyprint"> var buttonWidget = tau.widget.Button(document.getElementById(&quot;button&quot;));
 buttonWidget.destroy();

 // or

 $( &quot;#button&quot; ).button( &quot;destroy&quot; );</pre>
            </div>
            
        </dd>
    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-disable">disable</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Disable the button</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">Button disable ( ) </pre></div>
            
            <div class="description">
                <p>
                    <p>Method sets disabled attribute on button and changes look of button to disabled state.</p>


                </p>
            </div>
                
                
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
    <table><tbody>
    <tr>
        <th>Type</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>Button</td>
        <td>return this</td>
    </tr>
    </tbody></table>
        
        
            </div>
            
            <div class="example">
                <span class="example"><p>Code example:</p></span>
                <pre name="code" class="examplecode prettyprint"> var buttonWidget = tau.widget.Button(document.getElementById(&quot;button&quot;));
 buttonWidget.disable();

 // or

 $( &quot;#button&quot; ).button( &quot;disable&quot; );</pre>
            </div>
            
        </dd>
    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-enable">enable</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Enable the button</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">Button enable ( ) </pre></div>
            
            <div class="description">
                <p>
                    <p>Method removes disabled attribute on button and changes look of button to enabled state.</p>


                </p>
            </div>
                
                
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
    <table><tbody>
    <tr>
        <th>Type</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>Button</td>
        <td>return this</td>
    </tr>
    </tbody></table>
        
        
            </div>
            
            <div class="example">
                <span class="example"><p>Code example:</p></span>
                <pre name="code" class="examplecode prettyprint"> var buttonWidget = tau.widget.Button(document.getElementById(&quot;button&quot;));
 buttonWidget.enable();

 // or

 $( &quot;#button&quot; ).button( &quot;enable&quot; );</pre>
            </div>
            
        </dd>
    

    

    

    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-off">off</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Remove event listener to this.element.</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">off ( string eventName, Function listener, boolean? useCapture = false) </pre></div>
            
            <div class="description">
                <p>
                    
                </p>
            </div>
                
                <div class="parameters">
                    <p><span class="param">Parameters:</span></p>
                <table><tbody>
                <tr>
                    <th>Parameter</th>
                    <th>Type</th>
                    <th>Required / optional</th>
                    <th>Default value</th>
                    <th>Description</th>
                </tr>
                
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">eventName</span></td>
                    <td>string</td>
                    <td>required</td>
                    <td></td>
                    <td>the name of event</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">listener</span></td>
                    <td>Function</td>
                    <td>required</td>
                    <td></td>
                    <td>function call after event will be trigger</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">useCapture</span></td>
                    <td>boolean</td>
                    <td>optional</td>
                    <td>false</td>
                    <td>useCapture param tu addEventListener</td>
                </tr>
                
                
                </tbody>
                </table>
                </div>
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
        
            No Return Value
        
            </div>
            
        </dd>
    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-on">on</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Add event listener to this.element.</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">on ( string eventName, Function listener, boolean? useCapture = false) </pre></div>
            
            <div class="description">
                <p>
                    
                </p>
            </div>
                
                <div class="parameters">
                    <p><span class="param">Parameters:</span></p>
                <table><tbody>
                <tr>
                    <th>Parameter</th>
                    <th>Type</th>
                    <th>Required / optional</th>
                    <th>Default value</th>
                    <th>Description</th>
                </tr>
                
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">eventName</span></td>
                    <td>string</td>
                    <td>required</td>
                    <td></td>
                    <td>the name of event</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">listener</span></td>
                    <td>Function</td>
                    <td>required</td>
                    <td></td>
                    <td>function call after event will be trigger</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">useCapture</span></td>
                    <td>boolean</td>
                    <td>optional</td>
                    <td>false</td>
                    <td>useCapture param tu addEventListener</td>
                </tr>
                
                
                </tbody>
                </table>
                </div>
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
        
            No Return Value
        
            </div>
            
        </dd>
    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-option">option</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Get/Set options of the widget.</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">* option ( string | Object? name, * value) </pre></div>
            
            <div class="description">
                <p>
                    <p>This method can work in many context.</p>

<p>If first argument is type of object them, methos set values for options given in object. Keys of object are names of options and values from object are values to set.</p>

<p>If you give only one string argument then method return value for given option.</p>

<p>If you give two arguments and first argument will be a string then second argument will be interpetete as valu to set.</p>
                </p>
            </div>
                
                <div class="parameters">
                    <p><span class="param">Parameters:</span></p>
                <table><tbody>
                <tr>
                    <th>Parameter</th>
                    <th>Type</th>
                    <th>Required / optional</th>
                    <th>Default value</th>
                    <th>Description</th>
                </tr>
                
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">name</span></td>
                    <td>string | Object</td>
                    <td>optional</td>
                    <td></td>
                    <td>name of option</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">value</span></td>
                    <td>*</td>
                    <td>required</td>
                    <td></td>
                    <td>value to set</td>
                </tr>
                
                
                </tbody>
                </table>
                </div>
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
    <table><tbody>
    <tr>
        <th>Type</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>*</td>
        <td>return value of option or undefined if method is called in setter context</td>
    </tr>
    </tbody></table>
        
        
            </div>
            
        </dd>
    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-refresh">refresh</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Refresh a button markup.</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">Button refresh ( ) </pre></div>
            
            <div class="description">
                <p>
                    <p>This method will rebuild while DOM structure of widget.</p>

<p>This method should be called after are manually change in HTML attributes of widget DOM structure.</p>

<p>This method is called automatically after change any option of widget.</p>


                </p>
            </div>
                
                
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
    <table><tbody>
    <tr>
        <th>Type</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>Button</td>
        <td>return this</td>
    </tr>
    </tbody></table>
        
        
            </div>
            
            <div class="example">
                <span class="example"><p>Code example:</p></span>
                <pre name="code" class="examplecode prettyprint"> var buttonWidget = tau.widget.Button(document.getElementById(&quot;button&quot;));
 buttonWidget.refresh();

 // or

 $( &quot;#button&quot; ).button( &quot;refresh&quot; );

 // also will be called after

 buttonWidget.option(&quot;mini&quot;, true);</pre>
            </div>
            
        </dd>
    

    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-trigger">trigger</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Trigger an event on widget's element.</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">boolean trigger ( string eventName, *? data, boolean? bubbles = true, boolean? cancelable = true) </pre></div>
            
            <div class="description">
                <p>
                    
                </p>
            </div>
                
                <div class="parameters">
                    <p><span class="param">Parameters:</span></p>
                <table><tbody>
                <tr>
                    <th>Parameter</th>
                    <th>Type</th>
                    <th>Required / optional</th>
                    <th>Default value</th>
                    <th>Description</th>
                </tr>
                
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">eventName</span></td>
                    <td>string</td>
                    <td>required</td>
                    <td></td>
                    <td>the name of event to trigger</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">data</span></td>
                    <td>*</td>
                    <td>optional</td>
                    <td></td>
                    <td>additional object to be carried with the event</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">bubbles</span></td>
                    <td>boolean</td>
                    <td>optional</td>
                    <td>true</td>
                    <td>indicating whether the event bubbles up through the DOM or not</td>
                </tr>
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">cancelable</span></td>
                    <td>boolean</td>
                    <td>optional</td>
                    <td>true</td>
                    <td>indicating whether the event is cancelable</td>
                </tr>
                
                
                </tbody>
                </table>
                </div>
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
    <table><tbody>
    <tr>
        <th>Type</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>boolean</td>
        <td>false, if any callback invoked preventDefault on event object</td>
    </tr>
    </tbody></table>
        
        
            </div>
            
        </dd>
    

    
        <dt class="method" id="addidp28072"><code><b><span class="methodName" id="method-value">value</span></b></code></dt>
        <dd>
            <div class="brief">
                <p>Get or set value</p>
            </div>
            <div class="synopsis"><pre class="signature prettyprint">string value ( string? value) </pre></div>
            
            <p><span class="version">
            Since: </span>
                2.3
            </p>
            
            <div class="description">
                <p>
                    <p>Return inner text of button or set text on button</p>


                </p>
            </div>
                
                <div class="parameters">
                    <p><span class="param">Parameters:</span></p>
                <table><tbody>
                <tr>
                    <th>Parameter</th>
                    <th>Type</th>
                    <th>Required / optional</th>
                    <th>Default value</th>
                    <th>Description</th>
                </tr>
                
                
                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">value</span></td>
                    <td>string</td>
                    <td>optional</td>
                    <td></td>
                    <td>Value to set on button</td>
                </tr>
                
                
                </tbody>
                </table>
                </div>
                
            <div class="returntype">
                <p><span class="return">Return value:</span></p>
        
    <table><tbody>
    <tr>
        <th>Type</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>string</td>
        <td>In get mode return inner text of button.</td>
    </tr>
    </tbody></table>
        
        
            </div>
            
            <div class="example">
                <span class="example"><p>Code example:</p></span>
                <pre name="code" class="examplecode prettyprint"> var buttonWidget = tau.widget.Button(document.getElementById(&quot;button&quot;)),
     value = buttonWidget.value(); // value contains inner text of button

 buttonWidget.value( &quot;New text&quot; ); // &quot;New text&quot; will be text of button

 // or

 $( &quot;#button&quot; ).button( &quot;value&quot; ); // value contains inner text of button

 $( &quot;#button&quot; ).button( &quot;value&quot;, &quot;New text&quot; ); // &quot;New text&quot; will be text of button</pre>
            </div>
            
        </dd>
    

</dl>
<h2>Where to Go Next</h2>
<ul>
    
</ul>
<div id="footer">
    <hr size="1">
    <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a
            href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution
        3.0</a> and all of the Code Examples contained herein are licensed under <a
            href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the
        <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font>
    <!--start-->
    <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-25976949-1']);
        _gaq.push(['_trackPageview']);
        (function () {
            var ga = document.createElement('script');
            ga.type = 'text/javascript';
            ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0];
            s.parentNode.insertBefore(ga, s);
        })();
    </script>
    <!--end-->
</div>
</body>
</html>
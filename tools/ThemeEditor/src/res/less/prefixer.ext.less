// TAU extensions for prefixer
.mask-image(@url1, @url2) {
	-webkit-mask-image: url(@url1), url(@url2);
	-moz-mask-image: url(@url1), url(@url2);
	-ms-mask-image: url(@url1), url(@url2);
	-o-mask-image: url(@url1), url(@url2);
	mask-image: url(@url1), url(@url2);
}

.mask-image(@url) {
	-webkit-mask-image: url(@url);
	-moz-mask-image: url(@url);
	-ms-mask-image: url(@url);
	-o-mask-image: url(@url);
	mask-image: url(@url);
}

.mask-box-image(@value) {
	-webkit-mask-box-image: url(@value);
	-moz-mask-box-image: url(@value);
	-ms-mask-box-image: url(@value);
	-o-mask-box-image: url(@value);
	mask-box-image: url(@value);
}

.mask-box-image-source(@value) {
	-webkit-mask-box-image-source: url(@value);
	-moz-mask-box-image-source: url(@value);
	-ms-mask-box-image-source: url(@value);
	-o-mask-box-image-source: url(@value);
	mask-box-image-source: url(@value);
}

.mask-box-image-repeat(@repeat) {
	-webkit-mask-box-image-repeat: @repeat;
	-moz-mask-box-image-repeat: @repeat;
	-ms-mask-box-image-repeat: @repeat;
	-o-mask-box-image-repeat: @repeat;
	mask-box-image-repeat: @repeat;
}

.mask-box-image-width(@width) {
	-webkit-mask-box-image-width: @width;
	-moz-mask-box-image-width: @width;
	-ms-mask-box-image-width: @width;
	-o-mask-box-image-width: @width;
	mask-box-image-width: @width;
}

.mask-box-image-slice(@rect) {
	-webkit-mask-box-image-slice: @rect;
	-moz-mask-box-image-slice: @rect;
	-ms-mask-box-image-slice: @rect;
	-o-mask-box-image-slice: @rect;
	mask-box-image-slice: @rect;
}

.mask-size(@size) {
	-webkit-mask-size: @size;
	-moz-mask-size: @size;
	-ms-mask-size: @size;
	-o-mask-size: @size;
	mask-size: @size;
}

.mask-position(@position) {
	-webkit-mask-position: @position;
	-moz-mask-position: @position;
	-ms-mask-position: @position;
	-o-mask-position: @position;
	mask-position: @position;
}

.mask-repeat(@repeat) {
	-webkit-mask-repeat: @repeat;
	-moz-mask-repeat: @repeat;
	-ms-mask-repeat: @repeat;
	-o-mask-repeat: @repeat;
	mask-repeat: @repeat;
}

.linear-gradient-right(@default,@color1,@stop1,@color2,@stop2) {
	background-color: @default;
	background-image: -webkit-gradient(linear, right top, right top, color-stop(@stop1, @color1), color-stop(@stop2 @color2));
	background-image: -webkit-linear-gradient(right, @color1 @stop1, @color2 @stop2);
	background-image: -moz-linear-gradient(right, @color1 @stop1, @color2 @stop2);
	background-image: -ms-linear-gradient(right, @color1 @stop1, @color2 @stop2);
	background-image: -o-linear-gradient(right, @color1 @stop1, @color2 @stop2);
	background-image: linear-gradient(right, @color1 @stop1, @color2 @stop2);
}

.gradient-circural(@position, @startColor, @endColor, @radius) {
	background-image: -webkit-gradient(radial, @position, 0, 50% 50%, @radius, from(@startColor), to(@endColor));
  background-image: -moz-radial-gradient(@position, circle, @startColor 0, @endColor ~"@{radius}px");
	background-image: -ms-radial-gradient(@position, circle cover, @startColor, @endColor ~"@{radius}%");
	background-image: -o-radial-gradient(@position, circle cover, @startColor, @endColor ~"@{radius}%");
	background-image: radial-gradient(~"circle at @{position}", @startColor, @endColor ~"@{radius}%");
}

.gradient-circural-safe(@safeColor, @position, @startColor, @endColor, @radius) {
	background-color: @safeColor;
	.gradient-circural(@position, @startColor, @endColor, @radius);
}

.appearance(@value) {
	-webkit-appearance: @value;
	-moz-appearance: @value;
	-ms-appearance: @value;
	-o-appearance: @value;
	appearance: @value;
}

// prefixer's tprop function fails with 2 arguments, and we dont want strings
.transition-property(@property1, @property2) {
	-webkit-transition-property: @property1, @property2;
	-moz-transition-property: @property1, @property2;
	-o-transition-property: @property1, @property2;
	-ms-transition-property: @property1, @property2;
	transition-property: @property1, @property2;
}

.user-select(@value) {
	-webkit-user-select: @value;
	-moz-user-select: @value;
	-ms-user-select: @value;
	-o-user-select: @value;
	user-select: @value;
}

.text-size-adjust(@value) {
	-webkit-text-size-adjust: @value;
	-moz-text-size-adjust: @value;
	-ms-text-size-adjust: @value;
	-o-text-size-adjust: @value;
	text-size-adjust: @value;
}

.border-top-left-radius(@radius) {
	-webkit-border-top-left-radius: @radius;
	-moz-border-top-left-radius: @radius;
	-ms-border-top-left-radius: @radius;
	-o-border-top-left-radius: @radius;
	border-top-left-radius: @radius;
}

.border-top-right-radius(@radius) {
	-webkit-border-top-right-radius: @radius;
	-moz-border-top-right-radius: @radius;
	-ms-border-top-right-radius: @radius;
	-o-border-top-right-radius: @radius;
	border-top-right-radius: @radius;
}

.border-bottom-left-radius(@radius) {
	-webkit-border-bottom-left-radius: @radius;
	-moz-border-bottom-left-radius: @radius;
	-ms-border-bottom-left-radius: @radius;
	-o-border-bottom-left-radius: @radius;
	border-bottom-left-radius: @radius;
}

.border-bottom-right-radius(@radius) {
	-webkit-border-bottom-right-radius: @radius;
	-moz-border-bottom-right-radius: @radius;
	-ms-border-bottom-right-radius: @radius;
	-o-border-bottom-right-radius: @radius;
	border-bottom-right-radius: @radius;
}

.touch-scrolling() {
	-webkit-overflow-scrolling: touch;
	-moz-overflow-scrolling: touch;
	-o-overflow-scrolling: touch;
	-ms-overflow-scrolling: touch;
	overflow-scrolling: touch;
}

.calc-width(@value) {
	width: -webkit-calc(@value);
	width: -moz-calc(@value);
	width: -ms-calc(@value);
	width: -o-calc(@value);
	width: calc(@value);
}

.calc-margin-left(@value) {
	margin-left: -webkit-calc(@value);
	margin-left: -moz-calc(@value);
	margin-left: -ms-calc(@value);
	margin-left: -o-calc(@value);
	margin-left: calc(@value);
}

.display-flex() {
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: -o-flex;
	display: flex;
}

.flex-direction(@dir) {
	-webkit-flex-direction : @dir;
	-moz-flex-direction : @dir;
	-ms-flex-direction : @dir;
	-o-flex-direction : @dir;
	flex-direction : @dir;
}

.flex-wrap(@wrap) {
	-webkit-flex-wrap : @wrap;
	-moz-flex-wrap : @wrap;
	-ms-flex-wrap : @wrap;
	-o-flex-wrap : @wrap;
	flex-wrap : @wrap;
}

.justify-content(@value) {
	-webkit-justify-content : @value;
	-moz-justify-content : @value;
	-ms-justify-content : @value;
	-o-justify-content : @value;
	justify-content : @value;
}

.align-content(@value) {
	-webkit-align-content : @value;
	-moz-align-content : @value;
	-ms-align-content : @value;
	-o-align-content : @value;
	align-content : @value;
}

.align-items(@value) {
	-webkit-align-items : @value;
	-moz-align-items : @value;
	-ms-align-items : @value;
	-o-align-items : @value;
	align-items : @value;
}

.align-self(@value) {
	-webkit-align-left: @value;
	-moz-align-left: @value;
	-ms-align-left: @value;
	-o-align-left: @value;
	align-left: @value;
}

.flex(@value) {
	-webkit-flex: @value;
	-moz-flex: @value;
	-ms-flex: @value;
	-o-flex: @value;
	flex: @value;
}

.perspective(@value) {
	-webkit-perspective: @value;
	-moz-perspective: @value;
	-ms-perspective: @value;
	-o-perspective: @value;
	perspective: @value;
}

.backface-visiblity(@value) {
	-webkit-backface-visibility: @value;
	-moz-backface-visibility: @value;
	-ms-backface-visibility: @value;
	-o-backface-visibility: @value;
	backface-visiblity: @value;
}
